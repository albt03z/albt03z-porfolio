# Generated by Django 5.1.7 on 2025-03-28 00:16

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code', models.CharField(help_text='Código ISO 3166-1 alpha-2 del país (dos letras mayúsculas)', max_length=2, unique=True, validators=[django.core.validators.MaxLengthValidator(2), django.core.validators.RegexValidator(message='El código ISO debe ser de 2 letras mayúsculas', regex='^[A-Z]{2}$')])),
                ('iso_code3', models.CharField(help_text='Código ISO 3166-1 alpha-3 del país (tres letras mayúsculas)', max_length=3, unique=True, validators=[django.core.validators.MaxLengthValidator(3), django.core.validators.RegexValidator(message='El código ISO-3 debe ser de 3 letras mayúsculas', regex='^[A-Z]{3}$')])),
                ('numeric_code', models.CharField(help_text='Código numérico ISO 3166-1 del país (tres dígitos)', max_length=3, unique=True, validators=[django.core.validators.MaxLengthValidator(3), django.core.validators.RegexValidator(message='El código numérico debe ser de 3 dígitos', regex='^\\d{3}$')])),
                ('name', models.CharField(help_text='Nombre oficial del país en español', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('name_en', models.CharField(help_text='Nombre oficial del país en inglés', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CountryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capital', models.CharField(blank=True, help_text='Capital del país', max_length=100)),
                ('flag_png', models.URLField(blank=True, help_text='URL de la bandera en formato PNG')),
                ('flag_svg', models.URLField(blank=True, help_text='URL de la bandera en formato SVG')),
                ('calling_code', models.CharField(blank=True, help_text='Código telefónico internacional del país (ej: +34)', max_length=5, validators=[django.core.validators.RegexValidator(message='El código de llamada debe comenzar con + seguido de dígitos', regex='^\\+\\d{1,4}$')])),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='info', to='api.countries')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_code', models.CharField(help_text='Código ISO 3166-2 de la región (ej: ES-MD)', max_length=6, validators=[django.core.validators.MaxLengthValidator(6), django.core.validators.RegexValidator(message='El código ISO debe seguir el formato XX-YYY (país-región)', regex='^[A-Z]{2}-[A-Z0-9]{1,3}$')])),
                ('name', models.CharField(help_text='Nombre oficial de la región o estado', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('type', models.CharField(blank=True, help_text='Tipo de división administrativa (ej: Estado, Provincia, Región, etc.)', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(help_text='País al que pertenece esta región', on_delete=django.db.models.deletion.CASCADE, related_name='regions', to='api.countries')),
            ],
            options={
                'verbose_name': 'Región',
                'verbose_name_plural': 'Regiones',
                'ordering': ['country', 'name'],
                'unique_together': {('country', 'iso_code')},
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre oficial de la ciudad', max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('locode', models.CharField(blank=True, help_text='Código UN/LOCODE de la ciudad (si aplica)', max_length=5, null=True, validators=[django.core.validators.RegexValidator(message='El código UN/LOCODE debe ser de 5 caracteres alfanuméricos', regex='^[A-Z0-9]{5}$')])),
                ('postal_code_format', models.CharField(blank=True, help_text='Formato del código postal (ej: NNNNN para España)', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitud geográfica de la ciudad', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitud geográfica de la ciudad', max_digits=9, null=True)),
                ('is_capital', models.BooleanField(default=False, help_text='Indica si es la capital del país o región')),
                ('population', models.PositiveIntegerField(blank=True, help_text='Población estimada de la ciudad', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(help_text='País al que pertenece esta ciudad', on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='api.countries')),
                ('region', models.ForeignKey(help_text='Región a la que pertenece esta ciudad', on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='api.region')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'ordering': ['region', 'name'],
                'unique_together': {('region', 'name')},
            },
        ),
    ]
